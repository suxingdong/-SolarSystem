// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace ProtoMsg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProtoRequest {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static ProtoRequest() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CMsRequsetLogin : pb::GeneratedMessageLite<CMsRequsetLogin, CMsRequsetLogin.Builder> {
    private CMsRequsetLogin() { }
    private static readonly CMsRequsetLogin defaultInstance = new CMsRequsetLogin().MakeReadOnly();
    private static readonly string[] _cMsRequsetLoginFieldNames = new string[] { "account", "pwd", "verison" };
    private static readonly uint[] _cMsRequsetLoginFieldTags = new uint[] { 10, 18, 26 };
    public static CMsRequsetLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CMsRequsetLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CMsRequsetLogin ThisMessage {
      get { return this; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private pb::ByteString account_ = pb::ByteString.Empty;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public pb::ByteString Account {
      get { return account_; }
    }
    
    public const int PwdFieldNumber = 2;
    private bool hasPwd;
    private pb::ByteString pwd_ = pb::ByteString.Empty;
    public bool HasPwd {
      get { return hasPwd; }
    }
    public pb::ByteString Pwd {
      get { return pwd_; }
    }
    
    public const int VerisonFieldNumber = 3;
    private bool hasVerison;
    private pb::ByteString verison_ = pb::ByteString.Empty;
    public bool HasVerison {
      get { return hasVerison; }
    }
    public pb::ByteString Verison {
      get { return verison_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasPwd) return false;
        if (!hasVerison) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cMsRequsetLoginFieldNames;
      if (hasAccount) {
        output.WriteBytes(1, field_names[0], Account);
      }
      if (hasPwd) {
        output.WriteBytes(2, field_names[1], Pwd);
      }
      if (hasVerison) {
        output.WriteBytes(3, field_names[2], Verison);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, Account);
        }
        if (hasPwd) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Pwd);
        }
        if (hasVerison) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Verison);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasAccount) hash ^= account_.GetHashCode();
      if (hasPwd) hash ^= pwd_.GetHashCode();
      if (hasVerison) hash ^= verison_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CMsRequsetLogin other = obj as CMsRequsetLogin;
      if (other == null) return false;
      if (hasAccount != other.hasAccount || (hasAccount && !account_.Equals(other.account_))) return false;
      if (hasPwd != other.hasPwd || (hasPwd && !pwd_.Equals(other.pwd_))) return false;
      if (hasVerison != other.hasVerison || (hasVerison && !verison_.Equals(other.verison_))) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("account", hasAccount, account_, writer);
      PrintField("pwd", hasPwd, pwd_, writer);
      PrintField("verison", hasVerison, verison_, writer);
    }
    #endregion
    
    public static CMsRequsetLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CMsRequsetLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CMsRequsetLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsRequsetLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CMsRequsetLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CMsRequsetLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilderLite<CMsRequsetLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CMsRequsetLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CMsRequsetLogin result;
      
      private CMsRequsetLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          CMsRequsetLogin original = result;
          result = new CMsRequsetLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CMsRequsetLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CMsRequsetLogin DefaultInstanceForType {
        get { return global::ProtoMsg.CMsRequsetLogin.DefaultInstance; }
      }
      
      public override CMsRequsetLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CMsRequsetLogin) {
          return MergeFrom((CMsRequsetLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CMsRequsetLogin other) {
        if (other == global::ProtoMsg.CMsRequsetLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasPwd) {
          Pwd = other.Pwd;
        }
        if (other.HasVerison) {
          Verison = other.Verison;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cMsRequsetLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cMsRequsetLoginFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadBytes(ref result.account_);
              break;
            }
            case 18: {
              result.hasPwd = input.ReadBytes(ref result.pwd_);
              break;
            }
            case 26: {
              result.hasVerison = input.ReadBytes(ref result.verison_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public pb::ByteString Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasPwd {
        get { return result.hasPwd; }
      }
      public pb::ByteString Pwd {
        get { return result.Pwd; }
        set { SetPwd(value); }
      }
      public Builder SetPwd(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPwd = true;
        result.pwd_ = value;
        return this;
      }
      public Builder ClearPwd() {
        PrepareBuilder();
        result.hasPwd = false;
        result.pwd_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasVerison {
        get { return result.hasVerison; }
      }
      public pb::ByteString Verison {
        get { return result.Verison; }
        set { SetVerison(value); }
      }
      public Builder SetVerison(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVerison = true;
        result.verison_ = value;
        return this;
      }
      public Builder ClearVerison() {
        PrepareBuilder();
        result.hasVerison = false;
        result.verison_ = pb::ByteString.Empty;
        return this;
      }
    }
    static CMsRequsetLogin() {
      object.ReferenceEquals(global::ProtoMsg.ProtoRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CMsResponseLogin : pb::GeneratedMessageLite<CMsResponseLogin, CMsResponseLogin.Builder> {
    private CMsResponseLogin() { }
    private static readonly CMsResponseLogin defaultInstance = new CMsResponseLogin().MakeReadOnly();
    private static readonly string[] _cMsResponseLoginFieldNames = new string[] { "servers", "token" };
    private static readonly uint[] _cMsResponseLoginFieldTags = new uint[] { 18, 10 };
    public static CMsResponseLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CMsResponseLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CMsResponseLogin ThisMessage {
      get { return this; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public const int ServersFieldNumber = 2;
    private pbc::PopsicleList<global::ProtoMsg.Server> servers_ = new pbc::PopsicleList<global::ProtoMsg.Server>();
    public scg::IList<global::ProtoMsg.Server> ServersList {
      get { return servers_; }
    }
    public int ServersCount {
      get { return servers_.Count; }
    }
    public global::ProtoMsg.Server GetServers(int index) {
      return servers_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        foreach (global::ProtoMsg.Server element in ServersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cMsResponseLoginFieldNames;
      if (hasToken) {
        output.WriteBytes(1, field_names[1], Token);
      }
      if (servers_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], servers_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, Token);
        }
        foreach (global::ProtoMsg.Server element in ServersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasToken) hash ^= token_.GetHashCode();
      foreach(global::ProtoMsg.Server i in servers_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CMsResponseLogin other = obj as CMsResponseLogin;
      if (other == null) return false;
      if (hasToken != other.hasToken || (hasToken && !token_.Equals(other.token_))) return false;
      if(servers_.Count != other.servers_.Count) return false;
      for(int ix=0; ix < servers_.Count; ix++)
        if(!servers_[ix].Equals(other.servers_[ix])) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("token", hasToken, token_, writer);
      PrintField("servers", servers_, writer);
    }
    #endregion
    
    public static CMsResponseLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CMsResponseLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CMsResponseLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsResponseLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CMsResponseLogin MakeReadOnly() {
      servers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CMsResponseLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilderLite<CMsResponseLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CMsResponseLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CMsResponseLogin result;
      
      private CMsResponseLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          CMsResponseLogin original = result;
          result = new CMsResponseLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CMsResponseLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CMsResponseLogin DefaultInstanceForType {
        get { return global::ProtoMsg.CMsResponseLogin.DefaultInstance; }
      }
      
      public override CMsResponseLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CMsResponseLogin) {
          return MergeFrom((CMsResponseLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CMsResponseLogin other) {
        if (other == global::ProtoMsg.CMsResponseLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.servers_.Count != 0) {
          result.servers_.Add(other.servers_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cMsResponseLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cMsResponseLoginFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.servers_, global::ProtoMsg.Server.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<global::ProtoMsg.Server> ServersList {
        get { return PrepareBuilder().servers_; }
      }
      public int ServersCount {
        get { return result.ServersCount; }
      }
      public global::ProtoMsg.Server GetServers(int index) {
        return result.GetServers(index);
      }
      public Builder SetServers(int index, global::ProtoMsg.Server value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.servers_[index] = value;
        return this;
      }
      public Builder SetServers(int index, global::ProtoMsg.Server.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.servers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddServers(global::ProtoMsg.Server value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.servers_.Add(value);
        return this;
      }
      public Builder AddServers(global::ProtoMsg.Server.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.servers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeServers(scg::IEnumerable<global::ProtoMsg.Server> values) {
        PrepareBuilder();
        result.servers_.Add(values);
        return this;
      }
      public Builder ClearServers() {
        PrepareBuilder();
        result.servers_.Clear();
        return this;
      }
    }
    static CMsResponseLogin() {
      object.ReferenceEquals(global::ProtoMsg.ProtoRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CMsgLogout : pb::GeneratedMessageLite<CMsgLogout, CMsgLogout.Builder> {
    private CMsgLogout() { }
    private static readonly CMsgLogout defaultInstance = new CMsgLogout().MakeReadOnly();
    private static readonly string[] _cMsgLogoutFieldNames = new string[] { "ret" };
    private static readonly uint[] _cMsgLogoutFieldTags = new uint[] { 8 };
    public static CMsgLogout DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CMsgLogout DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CMsgLogout ThisMessage {
      get { return this; }
    }
    
    public const int RetFieldNumber = 1;
    private bool hasRet;
    private int ret_;
    public bool HasRet {
      get { return hasRet; }
    }
    public int Ret {
      get { return ret_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cMsgLogoutFieldNames;
      if (hasRet) {
        output.WriteInt32(1, field_names[0], Ret);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRet) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Ret);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasRet) hash ^= ret_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CMsgLogout other = obj as CMsgLogout;
      if (other == null) return false;
      if (hasRet != other.hasRet || (hasRet && !ret_.Equals(other.ret_))) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("ret", hasRet, ret_, writer);
    }
    #endregion
    
    public static CMsgLogout ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CMsgLogout ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CMsgLogout ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CMsgLogout ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsgLogout ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CMsgLogout MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CMsgLogout prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilderLite<CMsgLogout, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CMsgLogout cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CMsgLogout result;
      
      private CMsgLogout PrepareBuilder() {
        if (resultIsReadOnly) {
          CMsgLogout original = result;
          result = new CMsgLogout();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CMsgLogout MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CMsgLogout DefaultInstanceForType {
        get { return global::ProtoMsg.CMsgLogout.DefaultInstance; }
      }
      
      public override CMsgLogout BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CMsgLogout) {
          return MergeFrom((CMsgLogout) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CMsgLogout other) {
        if (other == global::ProtoMsg.CMsgLogout.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRet) {
          Ret = other.Ret;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cMsgLogoutFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cMsgLogoutFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRet = input.ReadInt32(ref result.ret_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasRet {
        get { return result.hasRet; }
      }
      public int Ret {
        get { return result.Ret; }
        set { SetRet(value); }
      }
      public Builder SetRet(int value) {
        PrepareBuilder();
        result.hasRet = true;
        result.ret_ = value;
        return this;
      }
      public Builder ClearRet() {
        PrepareBuilder();
        result.hasRet = false;
        result.ret_ = 0;
        return this;
      }
    }
    static CMsgLogout() {
      object.ReferenceEquals(global::ProtoMsg.ProtoRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CMsUserInfo : pb::GeneratedMessageLite<CMsUserInfo, CMsUserInfo.Builder> {
    private CMsUserInfo() { }
    private static readonly CMsUserInfo defaultInstance = new CMsUserInfo().MakeReadOnly();
    private static readonly string[] _cMsUserInfoFieldNames = new string[] { "bulidlist", "diamond", "gold", "iron", "solderlist", "weaponlist", "wood" };
    private static readonly uint[] _cMsUserInfoFieldTags = new uint[] { 42, 32, 8, 24, 58, 50, 16 };
    public static CMsUserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CMsUserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CMsUserInfo ThisMessage {
      get { return this; }
    }
    
    public const int GoldFieldNumber = 1;
    private bool hasGold;
    private int gold_;
    public bool HasGold {
      get { return hasGold; }
    }
    public int Gold {
      get { return gold_; }
    }
    
    public const int WoodFieldNumber = 2;
    private bool hasWood;
    private int wood_;
    public bool HasWood {
      get { return hasWood; }
    }
    public int Wood {
      get { return wood_; }
    }
    
    public const int IronFieldNumber = 3;
    private bool hasIron;
    private int iron_;
    public bool HasIron {
      get { return hasIron; }
    }
    public int Iron {
      get { return iron_; }
    }
    
    public const int DiamondFieldNumber = 4;
    private bool hasDiamond;
    private int diamond_;
    public bool HasDiamond {
      get { return hasDiamond; }
    }
    public int Diamond {
      get { return diamond_; }
    }
    
    public const int BulidlistFieldNumber = 5;
    private pbc::PopsicleList<global::ProtoMsg.Builds> bulidlist_ = new pbc::PopsicleList<global::ProtoMsg.Builds>();
    public scg::IList<global::ProtoMsg.Builds> BulidlistList {
      get { return bulidlist_; }
    }
    public int BulidlistCount {
      get { return bulidlist_.Count; }
    }
    public global::ProtoMsg.Builds GetBulidlist(int index) {
      return bulidlist_[index];
    }
    
    public const int WeaponlistFieldNumber = 6;
    private pbc::PopsicleList<global::ProtoMsg.Weapons> weaponlist_ = new pbc::PopsicleList<global::ProtoMsg.Weapons>();
    public scg::IList<global::ProtoMsg.Weapons> WeaponlistList {
      get { return weaponlist_; }
    }
    public int WeaponlistCount {
      get { return weaponlist_.Count; }
    }
    public global::ProtoMsg.Weapons GetWeaponlist(int index) {
      return weaponlist_[index];
    }
    
    public const int SolderlistFieldNumber = 7;
    private pbc::PopsicleList<global::ProtoMsg.Soldiers> solderlist_ = new pbc::PopsicleList<global::ProtoMsg.Soldiers>();
    public scg::IList<global::ProtoMsg.Soldiers> SolderlistList {
      get { return solderlist_; }
    }
    public int SolderlistCount {
      get { return solderlist_.Count; }
    }
    public global::ProtoMsg.Soldiers GetSolderlist(int index) {
      return solderlist_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cMsUserInfoFieldNames;
      if (hasGold) {
        output.WriteInt32(1, field_names[2], Gold);
      }
      if (hasWood) {
        output.WriteInt32(2, field_names[6], Wood);
      }
      if (hasIron) {
        output.WriteInt32(3, field_names[3], Iron);
      }
      if (hasDiamond) {
        output.WriteInt32(4, field_names[1], Diamond);
      }
      if (bulidlist_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], bulidlist_);
      }
      if (weaponlist_.Count > 0) {
        output.WriteMessageArray(6, field_names[5], weaponlist_);
      }
      if (solderlist_.Count > 0) {
        output.WriteMessageArray(7, field_names[4], solderlist_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGold) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Gold);
        }
        if (hasWood) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Wood);
        }
        if (hasIron) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Iron);
        }
        if (hasDiamond) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Diamond);
        }
        foreach (global::ProtoMsg.Builds element in BulidlistList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        foreach (global::ProtoMsg.Weapons element in WeaponlistList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        foreach (global::ProtoMsg.Soldiers element in SolderlistList) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasGold) hash ^= gold_.GetHashCode();
      if (hasWood) hash ^= wood_.GetHashCode();
      if (hasIron) hash ^= iron_.GetHashCode();
      if (hasDiamond) hash ^= diamond_.GetHashCode();
      foreach(global::ProtoMsg.Builds i in bulidlist_)
        hash ^= i.GetHashCode();
      foreach(global::ProtoMsg.Weapons i in weaponlist_)
        hash ^= i.GetHashCode();
      foreach(global::ProtoMsg.Soldiers i in solderlist_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CMsUserInfo other = obj as CMsUserInfo;
      if (other == null) return false;
      if (hasGold != other.hasGold || (hasGold && !gold_.Equals(other.gold_))) return false;
      if (hasWood != other.hasWood || (hasWood && !wood_.Equals(other.wood_))) return false;
      if (hasIron != other.hasIron || (hasIron && !iron_.Equals(other.iron_))) return false;
      if (hasDiamond != other.hasDiamond || (hasDiamond && !diamond_.Equals(other.diamond_))) return false;
      if(bulidlist_.Count != other.bulidlist_.Count) return false;
      for(int ix=0; ix < bulidlist_.Count; ix++)
        if(!bulidlist_[ix].Equals(other.bulidlist_[ix])) return false;
      if(weaponlist_.Count != other.weaponlist_.Count) return false;
      for(int ix=0; ix < weaponlist_.Count; ix++)
        if(!weaponlist_[ix].Equals(other.weaponlist_[ix])) return false;
      if(solderlist_.Count != other.solderlist_.Count) return false;
      for(int ix=0; ix < solderlist_.Count; ix++)
        if(!solderlist_[ix].Equals(other.solderlist_[ix])) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("gold", hasGold, gold_, writer);
      PrintField("wood", hasWood, wood_, writer);
      PrintField("iron", hasIron, iron_, writer);
      PrintField("diamond", hasDiamond, diamond_, writer);
      PrintField("bulidlist", bulidlist_, writer);
      PrintField("weaponlist", weaponlist_, writer);
      PrintField("solderlist", solderlist_, writer);
    }
    #endregion
    
    public static CMsUserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CMsUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CMsUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CMsUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CMsUserInfo MakeReadOnly() {
      bulidlist_.MakeReadOnly();
      weaponlist_.MakeReadOnly();
      solderlist_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CMsUserInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilderLite<CMsUserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CMsUserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CMsUserInfo result;
      
      private CMsUserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          CMsUserInfo original = result;
          result = new CMsUserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CMsUserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CMsUserInfo DefaultInstanceForType {
        get { return global::ProtoMsg.CMsUserInfo.DefaultInstance; }
      }
      
      public override CMsUserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CMsUserInfo) {
          return MergeFrom((CMsUserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CMsUserInfo other) {
        if (other == global::ProtoMsg.CMsUserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGold) {
          Gold = other.Gold;
        }
        if (other.HasWood) {
          Wood = other.Wood;
        }
        if (other.HasIron) {
          Iron = other.Iron;
        }
        if (other.HasDiamond) {
          Diamond = other.Diamond;
        }
        if (other.bulidlist_.Count != 0) {
          result.bulidlist_.Add(other.bulidlist_);
        }
        if (other.weaponlist_.Count != 0) {
          result.weaponlist_.Add(other.weaponlist_);
        }
        if (other.solderlist_.Count != 0) {
          result.solderlist_.Add(other.solderlist_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cMsUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cMsUserInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGold = input.ReadInt32(ref result.gold_);
              break;
            }
            case 16: {
              result.hasWood = input.ReadInt32(ref result.wood_);
              break;
            }
            case 24: {
              result.hasIron = input.ReadInt32(ref result.iron_);
              break;
            }
            case 32: {
              result.hasDiamond = input.ReadInt32(ref result.diamond_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.bulidlist_, global::ProtoMsg.Builds.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.weaponlist_, global::ProtoMsg.Weapons.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.solderlist_, global::ProtoMsg.Soldiers.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasGold {
        get { return result.hasGold; }
      }
      public int Gold {
        get { return result.Gold; }
        set { SetGold(value); }
      }
      public Builder SetGold(int value) {
        PrepareBuilder();
        result.hasGold = true;
        result.gold_ = value;
        return this;
      }
      public Builder ClearGold() {
        PrepareBuilder();
        result.hasGold = false;
        result.gold_ = 0;
        return this;
      }
      
      public bool HasWood {
        get { return result.hasWood; }
      }
      public int Wood {
        get { return result.Wood; }
        set { SetWood(value); }
      }
      public Builder SetWood(int value) {
        PrepareBuilder();
        result.hasWood = true;
        result.wood_ = value;
        return this;
      }
      public Builder ClearWood() {
        PrepareBuilder();
        result.hasWood = false;
        result.wood_ = 0;
        return this;
      }
      
      public bool HasIron {
        get { return result.hasIron; }
      }
      public int Iron {
        get { return result.Iron; }
        set { SetIron(value); }
      }
      public Builder SetIron(int value) {
        PrepareBuilder();
        result.hasIron = true;
        result.iron_ = value;
        return this;
      }
      public Builder ClearIron() {
        PrepareBuilder();
        result.hasIron = false;
        result.iron_ = 0;
        return this;
      }
      
      public bool HasDiamond {
        get { return result.hasDiamond; }
      }
      public int Diamond {
        get { return result.Diamond; }
        set { SetDiamond(value); }
      }
      public Builder SetDiamond(int value) {
        PrepareBuilder();
        result.hasDiamond = true;
        result.diamond_ = value;
        return this;
      }
      public Builder ClearDiamond() {
        PrepareBuilder();
        result.hasDiamond = false;
        result.diamond_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::ProtoMsg.Builds> BulidlistList {
        get { return PrepareBuilder().bulidlist_; }
      }
      public int BulidlistCount {
        get { return result.BulidlistCount; }
      }
      public global::ProtoMsg.Builds GetBulidlist(int index) {
        return result.GetBulidlist(index);
      }
      public Builder SetBulidlist(int index, global::ProtoMsg.Builds value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bulidlist_[index] = value;
        return this;
      }
      public Builder SetBulidlist(int index, global::ProtoMsg.Builds.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bulidlist_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBulidlist(global::ProtoMsg.Builds value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bulidlist_.Add(value);
        return this;
      }
      public Builder AddBulidlist(global::ProtoMsg.Builds.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bulidlist_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBulidlist(scg::IEnumerable<global::ProtoMsg.Builds> values) {
        PrepareBuilder();
        result.bulidlist_.Add(values);
        return this;
      }
      public Builder ClearBulidlist() {
        PrepareBuilder();
        result.bulidlist_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::ProtoMsg.Weapons> WeaponlistList {
        get { return PrepareBuilder().weaponlist_; }
      }
      public int WeaponlistCount {
        get { return result.WeaponlistCount; }
      }
      public global::ProtoMsg.Weapons GetWeaponlist(int index) {
        return result.GetWeaponlist(index);
      }
      public Builder SetWeaponlist(int index, global::ProtoMsg.Weapons value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.weaponlist_[index] = value;
        return this;
      }
      public Builder SetWeaponlist(int index, global::ProtoMsg.Weapons.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.weaponlist_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddWeaponlist(global::ProtoMsg.Weapons value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.weaponlist_.Add(value);
        return this;
      }
      public Builder AddWeaponlist(global::ProtoMsg.Weapons.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.weaponlist_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeWeaponlist(scg::IEnumerable<global::ProtoMsg.Weapons> values) {
        PrepareBuilder();
        result.weaponlist_.Add(values);
        return this;
      }
      public Builder ClearWeaponlist() {
        PrepareBuilder();
        result.weaponlist_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::ProtoMsg.Soldiers> SolderlistList {
        get { return PrepareBuilder().solderlist_; }
      }
      public int SolderlistCount {
        get { return result.SolderlistCount; }
      }
      public global::ProtoMsg.Soldiers GetSolderlist(int index) {
        return result.GetSolderlist(index);
      }
      public Builder SetSolderlist(int index, global::ProtoMsg.Soldiers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.solderlist_[index] = value;
        return this;
      }
      public Builder SetSolderlist(int index, global::ProtoMsg.Soldiers.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.solderlist_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSolderlist(global::ProtoMsg.Soldiers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.solderlist_.Add(value);
        return this;
      }
      public Builder AddSolderlist(global::ProtoMsg.Soldiers.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.solderlist_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSolderlist(scg::IEnumerable<global::ProtoMsg.Soldiers> values) {
        PrepareBuilder();
        result.solderlist_.Add(values);
        return this;
      }
      public Builder ClearSolderlist() {
        PrepareBuilder();
        result.solderlist_.Clear();
        return this;
      }
    }
    static CMsUserInfo() {
      object.ReferenceEquals(global::ProtoMsg.ProtoRequest.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
